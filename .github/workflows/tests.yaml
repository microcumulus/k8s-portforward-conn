name: Go Kubernetes Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24' # Adjust if your project uses a different Go version
        cache: false # Optional: disable cache if experiencing issues

    - name: Check formatting and vet
      run: |
        go vet ./...
        # Check if gofmt modifies any files
        fmt_output=$(gofmt -l .)
        if [ -n "$fmt_output" ]; then
          echo "Go files need formatting:"
          echo "$fmt_output"
          exit 1
        fi
        echo "Code is formatted correctly."

    - name: Install and run golangci-lint
      run: |
        go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
        $(go env GOPATH)/bin/golangci-lint run

    - name: Install and run govulncheck
      run: |
        go install golang.org/x/vuln/cmd/govulncheck@latest
        $(go env GOPATH)/bin/govulncheck ./...

  integration-test: # Renamed from 'test'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21' # Adjust if your project uses a different Go version

    - name: Set up KinD Cluster
      id: kind # Added an ID for consistency if needed later
      uses: helm/kind-action@v1.10.0
      # The action sets up a single-node KinD cluster named 'kind'.
      # It also exports the KUBECONFIG path as an output 'kubeconfig'.

    - name: Run Go Kubernetes tests
      run: |
        # The kind-action automatically sets the kubectl context.
        # Verify kubectl can connect (optional but good for debugging)
        echo "Verifying kubectl connection..."
        kubectl cluster-info
        kubectl get nodes

        echo "Running Go tests..."
        # The test code uses client-go which respects the KUBECONFIG env var.
        # Added -race flag as per best practices
        go test -v -race -timeout 5m ./...
      env:
        # Pass the kubeconfig path generated by kind-action to the Go test environment
        KUBECONFIG: ${{ steps.kind.outputs.kubeconfig }} # Use the ID 'kind' here
